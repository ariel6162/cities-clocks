{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ClockComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵelement(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5)(5, \"div\", 6);\n    i0.ɵɵelementStart(6, \"div\", 7);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.hourHandStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.minuteHandStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.secondHandStyle);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate4(\"\", ctx_r0.clock.city, \" \", ctx_r0.format(ctx_r0.clock.hour), \":\", ctx_r0.format(ctx_r0.clock.minute), \":\", ctx_r0.format(ctx_r0.clock.second), \"\");\n  }\n}\nexport class ClockComponent {\n  constructor() {\n    this.isRunning = true;\n    this.clock = {\n      id: 1,\n      hour: 6,\n      minute: 14,\n      second: 8,\n      city: 'Jerusalem',\n      checked: true\n    };\n  }\n  ngAfterViewInit() {\n    this.timerId = this.getTime();\n  }\n  animateAnalogClock(clock) {\n    this.hourHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(${clock.hour * 30 + clock.minute * 0.5 + clock.second * (0.5 / 60)}deg)`\n    };\n    this.minuteHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(${clock.minute * 6 + clock.second * 0.1}deg)`\n    };\n    this.secondHandStyle = {\n      transform: `translate3d(-50%, 0, 0) rotate(${clock.second * 6}deg)`\n    };\n  }\n  getTime() {\n    return setInterval(() => {\n      this.animateAnalogClock(this.clock);\n    }, 1000);\n  }\n  format(num) {\n    return (num + '').length === 1 ? '0' + num : num + '';\n  }\n}\nClockComponent.ɵfac = function ClockComponent_Factory(t) {\n  return new (t || ClockComponent)();\n};\nClockComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClockComponent,\n  selectors: [[\"app-clock\"]],\n  inputs: {\n    clock: \"clock\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"clock\", 4, \"ngIf\"], [1, \"clock\"], [1, \"analog-clock\"], [1, \"hour\", \"hand\", 3, \"ngStyle\"], [1, \"minute\", \"hand\", 3, \"ngStyle\"], [1, \"second\", \"hand\", 3, \"ngStyle\"], [1, \"center-circle\"], [1, \"digital-clock\"]],\n  template: function ClockComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ClockComponent_div_0_Template, 8, 7, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.clock.checked);\n    }\n  },\n  dependencies: [i1.NgIf, i1.NgStyle],\n  styles: [\".clock[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-around;\\n}\\n.clock[_ngcontent-%COMP%]   .analog-clock[_ngcontent-%COMP%] {\\n  position: relative;\\n  margin: 50px auto 0;\\n  width: 200px;\\n  height: 200px;\\n  background-color: rgb(175, 200, 226);\\n  border-radius: 50%;\\n}\\n.clock[_ngcontent-%COMP%]   .hand[_ngcontent-%COMP%] {\\n  position: absolute;\\n  left: 50%;\\n  width: 2px;\\n  height: 100px;\\n  transform-origin: 100% 100%;\\n}\\n.clock[_ngcontent-%COMP%]   .hour[_ngcontent-%COMP%] {\\n  background-color: #086810;\\n  width: 4px;\\n}\\n.clock[_ngcontent-%COMP%]   .minute[_ngcontent-%COMP%] {\\n  background-color: #3f51b5;\\n}\\n.clock[_ngcontent-%COMP%]   .second[_ngcontent-%COMP%] {\\n  background-color: #9e9e9e;\\n  width: 1px;\\n}\\n.clock[_ngcontent-%COMP%]   .center-circle[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate3d(-50%, -50%, 0);\\n  width: 12px;\\n  height: 12px;\\n  background-color: black;\\n  border-radius: 50%;\\n}\\n.clock[_ngcontent-%COMP%]   .digital-clock[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 110%;\\n  left: 50%;\\n  transform: translate3d(-50%, 0, 0);\\n  font-size: 2em;\\n  font-family: Rockwell;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2xvY2svY2xvY2suY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtFQUNBLDZCQUFBO0FBQ0Y7QUFFRTtFQUNFLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLG9DQUFBO0VBQ0Esa0JBQUE7QUFBSjtBQUdFO0VBQ0Usa0JBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLGFBQUE7RUFDQSwyQkFBQTtBQURKO0FBSUU7RUFDRSx5QkFBQTtFQUNBLFVBQUE7QUFGSjtBQUtFO0VBQ0UseUJBQUE7QUFISjtBQU1FO0VBQ0UseUJBQUE7RUFDQSxVQUFBO0FBSko7QUFPRTtFQUNFLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQSxxQ0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtBQUxKO0FBUUU7RUFDRSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxTQUFBO0VBQ0Esa0NBQUE7RUFDQSxjQUFBO0VBQ0EscUJBQUE7QUFOSiIsInNvdXJjZXNDb250ZW50IjpbIi5jbG9ja3tcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuXHJcblxyXG4gIC5hbmFsb2ctY2xvY2sge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luOiA1MHB4IGF1dG8gMDtcclxuICAgIHdpZHRoOiAyMDBweDtcclxuICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTc1LCAyMDAsIDIyNik7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgfVxyXG5cclxuICAuaGFuZCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB3aWR0aDogMnB4O1xyXG4gICAgaGVpZ2h0OiAxMDBweDtcclxuICAgIHRyYW5zZm9ybS1vcmlnaW46IDEwMCUgMTAwJTtcclxuICB9XHJcblxyXG4gIC5ob3VyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwODY4MTA7XHJcbiAgICB3aWR0aDogNHB4O1xyXG4gIH1cclxuXHJcbiAgLm1pbnV0ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y1MWI1O1xyXG4gIH1cclxuXHJcbiAgLnNlY29uZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOWU5ZTllO1xyXG4gICAgd2lkdGg6IDFweDtcclxuICB9XHJcblxyXG4gIC5jZW50ZXItY2lyY2xlIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKTtcclxuICAgIHdpZHRoOiAxMnB4O1xyXG4gICAgaGVpZ2h0OiAxMnB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgfVxyXG5cclxuICAuZGlnaXRhbC1jbG9jayB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDExMCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC01MCUsIDAsIDApO1xyXG4gICAgZm9udC1zaXplOiAyZW07XHJcbiAgICBmb250LWZhbWlseTogUm9ja3dlbGw7XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;IAAEA,8BAAyC;IAErCA,yBAAuD;IAIvDA,8BAA2B;IAAAA,YAAuF;IAAAA,iBAAM;;;;IAJjGA,eAAyB;IAAzBA,8CAAyB;IACvBA,eAA2B;IAA3BA,gDAA2B;IAC3BA,eAA2B;IAA3BA,gDAA2B;IAEzBA,eAAuF;IAAvFA,yKAAuF;;;ACExH,OAAM,MAAOC,cAAc;EAL3BC;IAUE,cAAS,GAAG,IAAI;IAGP,UAAK,GAAc;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAE;IAAI,CAAE;;EAEvGC,eAAe;IACb,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,OAAO,EAAE;EAC/B;EAEAC,kBAAkB,CAACC,KAAU;IAC3B,IAAI,CAACC,aAAa,GAAG;MAAEC,SAAS,EAAE,kCAAmCF,KAAK,CAACT,IAAI,GAAG,EAAE,GAAKS,KAAK,CAACR,MAAM,GAAG,GAAI,GAAIQ,KAAK,CAACP,MAAM,IAAI,GAAG,GAAG,EAAE,CAAE;IAAM,CAAE;IAElJ,IAAI,CAACU,eAAe,GAAG;MAAED,SAAS,EAAE,kCAAmCF,KAAK,CAACR,MAAM,GAAG,CAAC,GAAKQ,KAAK,CAACP,MAAM,GAAG,GAAI;IAAM,CAAE;IAEvH,IAAI,CAACW,eAAe,GAAG;MAAEF,SAAS,EAAE,kCAAkCF,KAAK,CAACP,MAAM,GAAG,CAAC;IAAM,CAAE;EAChG;EAEAK,OAAO;IACL,OAAOO,WAAW,CAAC,MAAK;MAAE,IAAI,CAACN,kBAAkB,CAAC,IAAI,CAACC,KAAK,CAAC;IAAC,CAAC,EAAE,IAAI,CAAC;EACxE;EAEAM,MAAM,CAACC,GAAW;IAChB,OAAO,CAACA,GAAG,GAAG,EAAE,EAAEC,MAAM,KAAK,CAAC,GAAG,GAAG,GAAGD,GAAG,GAAGA,GAAG,GAAG,EAAE;EACvD;;AA5BWnB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAqB;EAAAC;IAAAV;EAAA;EAAAW;EAAAC;EAAAC;EAAAC;IAAA;MDRzB3B,+DAQM;;;MARAA,wCAAmB","names":["i0","ClockComponent","constructor","id","hour","minute","second","city","checked","ngAfterViewInit","timerId","getTime","animateAnalogClock","clock","hourHandStyle","transform","minuteHandStyle","secondHandStyle","setInterval","format","num","length","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\ariel\\Documents\\jb\\angular2023\\four-cities-clock\\src\\app\\clock\\clock.component.html","C:\\Users\\ariel\\Documents\\jb\\angular2023\\four-cities-clock\\src\\app\\clock\\clock.component.ts"],"sourcesContent":["  <div *ngIf=\"clock.checked\" class=\"clock\">\n    <div class=\"analog-clock\">\n      <div class=\"hour hand\" [ngStyle]=\"hourHandStyle\"></div>\n      <div class=\"minute hand\" [ngStyle]=\"minuteHandStyle\"></div>\n      <div class=\"second hand\" [ngStyle]=\"secondHandStyle\"></div>\n      <div class=\"center-circle\"></div>\n      <div class=\"digital-clock\">{{clock.city}} {{format(clock.hour)}}:{{format(clock.minute)}}:{{format(clock.second)}}</div>\n    </div>\n  </div>\n","import { Component, AfterViewInit,Input } from '@angular/core';\nimport { ClockData } from '../models/clockData.model';\n\n@Component({\n  selector: 'app-clock',\n  templateUrl: './clock.component.html',\n  styleUrls: ['./clock.component.scss']\n})\nexport class ClockComponent implements AfterViewInit{\n\n  hourHandStyle: { transform: string; };\n  minuteHandStyle: { transform: string; };\n  secondHandStyle: { transform: string; };\n  isRunning = true;\n  timerId: any;\n\n  @Input() clock: ClockData = { id: 1, hour: 6, minute: 14, second: 8, city: 'Jerusalem', checked: true };\n\n  ngAfterViewInit() {\n    this.timerId = this.getTime();\n  }\n\n  animateAnalogClock(clock: any) {\n    this.hourHandStyle = { transform: `translate3d(-50%, 0, 0) rotate(${(clock.hour * 30) + (clock.minute * 0.5) + (clock.second * (0.5 / 60))}deg)` };\n\n    this.minuteHandStyle = { transform: `translate3d(-50%, 0, 0) rotate(${(clock.minute * 6) + (clock.second * 0.1)}deg)` };\n\n    this.secondHandStyle = { transform: `translate3d(-50%, 0, 0) rotate(${clock.second * 6}deg)` };\n  }\n\n  getTime() {\n    return setInterval(() => {this.animateAnalogClock(this.clock);}, 1000);\n  }\n\n  format(num: number) {\n    return (num + '').length === 1 ? '0' + num : num + '';\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}