{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction CheckBoxComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"input\", 3);\n    i0.ɵɵlistener(\"change\", function CheckBoxComponent_div_3_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const clock_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleClock(clock_r1));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const clock_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", clock_r1.id)(\"name\", clock_r1.city)(\"checked\", clock_r1.checked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", clock_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(clock_r1.city);\n  }\n}\nexport class CheckBoxComponent {\n  get clocks() {\n    return this._clocks;\n  }\n  set clocks(value) {\n    this._clocks = value;\n  }\n  constructor(_formBuilder) {\n    this._formBuilder = _formBuilder;\n    this.cities = this._formBuilder.group({\n      Jerusalem: true,\n      London: true,\n      Manhattan: true,\n      Tokyo: true\n    });\n  }\n  toggleClock(clock) {\n    clock.checked = !clock?.checked;\n    // Do whatever you need to do when the clock is toggled\n  }\n}\n\nCheckBoxComponent.ɵfac = function CheckBoxComponent_Factory(t) {\n  return new (t || CheckBoxComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nCheckBoxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckBoxComponent,\n  selectors: [[\"app-check-box\"]],\n  inputs: {\n    _clocks: \"_clocks\"\n  },\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"example-section\", 3, \"formGroup\"], [\"class\", \"checkbox\", 4, \"ngFor\", \"ngForOf\"], [1, \"checkbox\"], [\"type\", \"checkbox\", 3, \"id\", \"name\", \"checked\", \"change\"], [3, \"for\"]],\n  template: function CheckBoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"h4\");\n      i0.ɵɵtext(2, \"Select your clocks:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, CheckBoxComponent_div_3_Template, 4, 5, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.cities);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.clocks);\n    }\n  },\n  dependencies: [i2.NgForOf, i1.NgControlStatusGroup, i1.FormGroupDirective],\n  styles: [\".example-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  font-family: Arial, sans-serif;\\n  font-size: 16px;\\n}\\n\\nh4[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n  font-weight: bold;\\n  color: #333;\\n  font-size: 20px;\\n}\\n\\n.checkbox-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  margin-bottom: 10px;\\n}\\n\\n.checkbox[_ngcontent-%COMP%] {\\n  margin-right: 20px;\\n  font-size: 16px;\\n}\\n\\ninput[type=checkbox][_ngcontent-%COMP%] {\\n  margin-right: 5px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  color: #333;\\n  font-weight: normal;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hlY2stYm94L2NoZWNrLWJveC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO0VBQ0EsOEJBQUE7RUFDQSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsZUFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLG1CQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1zZWN0aW9uIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG5cclxuaDQge1xyXG4gIG1hcmdpbi10b3A6IDA7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgY29sb3I6ICMzMzM7XHJcbiAgZm9udC1zaXplOiAyMHB4O1xyXG59XHJcblxyXG4uY2hlY2tib3gtY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4uY2hlY2tib3gge1xyXG4gIG1hcmdpbi1yaWdodDogMjBweDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XHJcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICBjb2xvcjogIzMzMztcclxuICBmb250LXdlaWdodDogbm9ybWFsO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG4vLyAuZXhhbXBsZS1zZWN0aW9ue1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbi8vICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuLy8gfVxyXG5cclxuLy8gaDR7XHJcbi8vICAgYWxpZ24tc2VsZjogZmxleC1lbmRcclxuICAvLyBtYXJnaW46IDEycHggMDtcclxuICAvLyB3aWR0aDogMTUwcHhcclxuLy8gfVxyXG4vLyAuZXhhbXBsZS1zZWN0aW9ue1xyXG4vLyAgIG1hcmdpbjogMTJweCAwO1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuLy8gICBhbGlnbi1pdGVtczogcmlnaHQ7XHJcbi8vICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbi8vICAgZm9udC1zaXplOiAxZW07XHJcbi8vICAgZm9udC1mYW1pbHk6IFJvY2t3ZWxsO1xyXG4vLyB9XHJcbi8vIC5leGFtcGxlLXNlY3Rpb24ge1xyXG4vLyAgIG1hcmdpbjogMTJweCAwO1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgZmxleC1kaXJlY3Rpb246IGZpeC1lbmQ7XHJcbi8vICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuLy8gICBqdXN0aWZ5LWNvbnRlbnQ6IGFsaWduO1xyXG4vLyB9XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;IAGEA,8BAAmD;IACoCA;MAAA;MAAA;MAAA;MAAA,OAAUA,2CAAkB;IAAA,EAAC;IAAlHA,iBAAmH;IACnHA,gCAAwB;IAAAA,YAAqB;IAAAA,iBAAQ;;;;IAD9BA,eAAe;IAAfA,gCAAe;IAC/BA,eAAgB;IAAhBA,iCAAgB;IAACA,eAAqB;IAArBA,mCAAqB;;;ACIjD,OAAM,MAAOC,iBAAiB;EAU5B,IAAWC,MAAM;IACf,OAAO,IAAI,CAACC,OAAO;EACrB;EACA,IAAWD,MAAM,CAACE,KAAkB;IAClC,IAAI,CAACD,OAAO,GAAGC,KAAK;EACtB;EACAC,YAAoBC,YAAyB;IAAzB,iBAAY,GAAZA,YAAY;IAfhC,WAAM,GAAG,IAAI,CAACA,YAAY,CAACC,KAAK,CAAC;MAC/BC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,IAAI;MACfC,KAAK,EAAE;KACR,CAAC;EAU8C;EAEhDC,WAAW,CAACC,KAA4B;IACtCA,KAAK,CAACC,OAAO,GAAG,CAACD,KAAK,EAAEC,OAAO;IAC/B;EACF;;;AArBWb,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAc;EAAAC;IAAAb;EAAA;EAAAc;EAAAC;EAAAC;EAAAC;IAAA;MDT9BpB,kCAAsD;MAChDA,mCAAmB;MAAAA,iBAAK;MAE5BA,kEAGM;MAwCRA,iBAAU;;;MA9CuBA,sCAAoB;MAGXA,eAAS;MAATA,oCAAS","names":["i0","CheckBoxComponent","clocks","_clocks","value","constructor","_formBuilder","group","Jerusalem","London","Manhattan","Tokyo","toggleClock","clock","checked","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\ariel\\Documents\\jb\\angular2023\\four-cities-clock\\src\\app\\check-box\\check-box.component.html","C:\\Users\\ariel\\Documents\\jb\\angular2023\\four-cities-clock\\src\\app\\check-box\\check-box.component.ts"],"sourcesContent":["<section class=\"example-section\" [formGroup]=\"cities\">\n  <h4>Select your clocks:</h4>\n\n  <div class=\"checkbox\" *ngFor=\"let clock of clocks\">\n    <input type=\"checkbox\" [id]=\"clock.id\" [name]=\"clock.city\" [checked]=\"clock.checked\" (change)=\"toggleClock(clock)\">\n    <label [for]=\"clock.id\">{{ this.clock.city }}</label>\n  </div>\n\n\n\n\n\n\n<!-- <section class=\"example-section\" [formGroup]=\"toppings\">\n  <h4>Select your clocks:</h4>\n\n  <div class=\"checkbox\">\n    <input type=\"checkbox\" id=\"1\" name=\"Jerusalem\" checked>\n    <label for=\"scales\">Jerusalem</label>\n  </div>\n\n  <div class=\"checkbox\">\n    <input type=\"checkbox\" id=\"2\" name=\"London\">\n    <label for=\"horns\">London</label>\n  </div>\n\n  <div class=\"checkbox\">\n    <input type=\"checkbox\" id=\"3\" name=\"Manhattan\" checked>\n    <label for=\"scales\">Manhattan</label>\n  </div>\n\n  <div class=\"checkbox\">\n    <input type=\"checkbox\" id=\"4\" name=\"Tokyo\">\n    <label for=\"horns\">Tokyo</label>\n  </div> -->\n\n\n  <!--\n  <input value=\"london\" type=\"checkbox\" checked=\"false\">\n  <input value=\"london\" type=\"checkbox\" checked=\"false\">\n  <input value=\"london\" type=\"checkbox\" checked=\"false\"> -->\n  <!-- <input value=\"{{item.check}}\" type=\"checkbox\" [checked]=\"item.checked\"> -->\n  <!-- <p><mat-checkbox formControlName=\"Jerusalem\">Jerusalem</mat-checkbox></p>\n  <p><mat-checkbox formControlName=\"London\">London</mat-checkbox></p>\n  <p><mat-checkbox formControlName=\"Manhattan\">Manhattan</mat-checkbox></p>\n  <p><mat-checkbox formControlName=\"Tokyo\">Tokyo</mat-checkbox></p> -->\n</section>\n\n<!-- <section class=\"example-section\" [formGroup]=\"toppings\">\n  <h4>You chose:</h4>\n  {{toppings.value | json}}\n</section> -->\n","import {Component, Input} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport { ClockData } from '../models/clockData.model';\n\n@Component({\n  selector: 'app-check-box',\n  templateUrl: './check-box.component.html',\n  styleUrls: ['./check-box.component.scss']\n})\nexport class CheckBoxComponent {\n  cities = this._formBuilder.group({\n    Jerusalem: true,\n    London: true,\n    Manhattan: true,\n    Tokyo: true\n  });\n\n  @Input()\n  private _clocks: ClockData[];\n  public get clocks(): ClockData[] {\n    return this._clocks;\n  }\n  public set clocks(value: ClockData[]) {\n    this._clocks = value;\n  }\n  constructor(private _formBuilder: FormBuilder) {}\n\n  toggleClock(clock: { checked: boolean; }) {\n    clock.checked = !clock?.checked;\n    // Do whatever you need to do when the clock is toggled\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}